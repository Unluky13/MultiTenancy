@model IEnumerable<string>

@using Microsoft.Extensions.Caching.Memory;
@inject ITenantMemoryCache TenantCache;
@inject IMemoryCache GlobalCache;

<p>Names from the tenant specific database.</p>
<ul>
    @foreach (var value in Model)
    {
        <li>@value</li>
    }
</ul>

@{
    var tenantCachedValue = TenantCache.GetOrCreate("Test", x =>
    {
        x.AbsoluteExpirationRelativeToNow = TimeSpan.FromSeconds(10);
        return DateTime.Now;
    });
    var globalCachedValue = GlobalCache.GetOrCreate("Test", x =>
    {
        x.AbsoluteExpirationRelativeToNow = TimeSpan.FromSeconds(15);
        return DateTime.Now;
    });
}

<p>Date from tenant cache (10 seconds): @tenantCachedValue.ToString()</p>
<p>Date from global cache (15 seconds): @globalCachedValue.ToString()</p>